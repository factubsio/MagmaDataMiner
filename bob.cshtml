@using RazorLight
@using MagmaDataMiner
@inherits TemplatePage<AbilitiesModel>

<head>
	<link rel="stylesheet" href="stuff.css">
</head>

<body>
	<div class="nav-selectors">
		<div class="page-selectors">
			<span class="page-selector generic-selector" data-page="bindings">Bindings</span>
			<span class="page-selector generic-selector" data-page="vestiges">Vestiges</span>
			<span class="page-selector generic-selector" data-page="enemies">Enemies</span>
		</div>

		<div class="sub-selectors" style="display:none" data-page="bindings">
			@foreach (var source in @Model.Sources)
			{
				<span class="source-selector generic-selector" data-source="@source.Source">
					@source.Source
				</span>
			}
		</div>
	</div>

	<div class="content-root">
		<div class="page-container" style="display:none" data-page="bindings">

			@foreach (var source in @Model.Sources)
			{
				<div class="source-container" style="display: none" data-source="@source.Source">
					<div class="generic-container">
						<h2 class="ability-source">@source.Source</h2>
						@foreach (var ability in source.Abilities)
						{
							<div class="generic-box generic-container">
								<h3>@ability.Name</h3>
								<table class="augment-table">
									<tr>
										<th width="100px">Name</th>
										<th width="100">Description</th>
										<th width="100px">Rarity</th>
										<th width="100px">Unique</th>
									</tr>
									@foreach (var augment in ability.Augments)
									{
										<tr>
											<td width="100px">@augment.Name</td>
											<td width="100">@Raw(augment.Description)</td>
											<td width="100px">@augment.Rarity</td>
											<td width="100px">@augment.Unique</td>
										</tr>
									}
								</table>
								<div class="ascensions-container">
									@foreach (var ascension in ability.Ascensions)
									{
										<div>
											<span class="ascension-name">@ascension.Name</span>
											<span class="ascension-description">@Raw(ascension.Description)</span>
										</div>
									}
								</div>
							</div>

						}
					</div>
				</div>
			}
		</div>
		<div class="page-container" style="display:none" data-page="vestiges">

			<table class="vestige-table">
				<tr>
					<th width="100px">Name</th>
					<th width="100">Description</th>
					<th width="100px">Rarity</th>
				</tr>
				@foreach (var vestige in @Model.Vestiges)
				{
					<tr>
						<td width="100px">@vestige.Name</td>
						<td width="100">@Raw(vestige.Description)</td>
						<td width="100px">@vestige.Rarity</td>
					</tr>
				}
			</table>

		</div>
		<div class="page-container" style="display:none" data-page="enemies">
		</div>
	</div>

	<script>
		function createSelector(type, nav, initial) {
			const selectors = document.getElementsByClassName(`${type}-selector`);
			const views = new Map();
			const navViews = new Map();

			const dataElem = `data-${type}`;

			for (const view of document.getElementsByClassName(`${type}-container`)) {
				views.set(view.getAttribute(dataElem), view);
			}

			if (nav) {
				for (const navView of document.getElementsByClassName(`sub-selectors`)) {
					navViews.set(navView.getAttribute(dataElem), navView);
				}
			}

			let currentView = null;
			let currentNavView = null;

			for (const button of selectors) {
				const buttonId = button.getAttribute(dataElem);
				const view = views.get(buttonId);
				const navView = navViews.get(buttonId);

				function selectThis() {
					button.classList.add("generic-selected");
					view.style.display = 'block';

					if (nav && navView) {
						navView.style.display = 'block';
					}

					currentView = view;
					if (nav) {
						currentNavView = navView;
					}
				}

				button.addEventListener('click', e => {

					if (button.classList.contains("generic-selected")) {
						return;
					}

					for (const other of selectors) {
						if (other != button) {
							other.classList.remove("generic-selected");
						}
					}

					if (currentView) {
						currentView.style.display = 'none';
					}
					if (nav && currentNavView) {
						currentNavView.style.display = 'none';
					}

					selectThis();

				});

				if (buttonId == initial) {
					selectThis();
				}
			}

		}

		createSelector('page', true, 'bindings');

		createSelector('source', false, 'Magma Miner');

	</script>
</body>
